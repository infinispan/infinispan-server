<!--
  ~ Copyright 2011 Red Hat, Inc. and/or its affiliates.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this library; if not, write to the Free Software
  ~ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
  ~ 02110-1301 USA
  -->
<project name="dist-dir" basedir="." default="clean">

	<property name="output.dir"
             value="target/${jboss.datagrid.release.finalName}"/>
	<property name="asbuild.dir"
             value="${project.basedir}/../../jboss-as/build"/>
	<property name="rest.war"
             value="${project.basedir}/../../rest/target/enterprise-datagrid-rest-${project.version}.war"/>

	<import file="${asbuild.dir}/lib.xml"/>

	<target name="clean">
		<delete dir="${output.dir}"/>
	</target>

	<target name="copy-files">
		<!-- Copy the files from JBoss AS first -->
		<copy todir="${output.dir}">
			<fileset dir="${asbuild.dir}/target/jboss-as-${version.org.jboss.as}">
				<include name="**"/>
			</fileset>
		</copy>

		<!-- Make shell scripts executable -->
		<chmod perm="ugo+x">
			<fileset dir="${output.dir}/bin">
				<include name="*.sh"/>
			</fileset>
		</chmod>

		<!-- Delete unused profiles (domain and standalone) -->
		<delete dir="${output.dir}/domain"/>
		<delete dir="${output.dir}/standalone"/>

		<!-- Delete unused files and directories -->
		<delete file="${output.dir}/README.txt"/>
		<delete dir="${output.dir}/bundles"/>
		<delete dir="${output.dir}/welcome-content"/>
		
		<!-- Copy the files specific to JBoss Enterprise Data Grid -->
		<copy todir="${output.dir}/standalone">
			<fileset dir="${project.basedir}/../src/main/resources/standalone">
				<include name="**" />
			</fileset>
			<filterset>
				<filter token="rest.war.checksum" value="${rest.war.checksum}" />
			</filterset>
		</copy>

		<copy todir="${output.dir}/domain">
			<fileset dir="${project.basedir}/../src/main/resources/domain">
				<include name="**" />
			</fileset>
			<filterset>
				<filter token="rest.war.checksum" value="${rest.war.checksum}" />
			</filterset>
		</copy>
		
		<!-- Copy the REST webapp elements -->
		<copy todir="${output.dir}/rest">
			<fileset dir="${project.basedir}/../src/main/resources/rest">
				<include name="**"/>
			</fileset>
		</copy>

		<!-- Copy EDG's readme file -->
		<copy todir="${output.dir}">
			<fileset dir="${project.basedir}/../src/main/resources">
				<include name="README.txt"/>
			</fileset>
		</copy>
		
	</target>

	<target name="modules">

		<module-def name="com.thoughtworks.xstream">
			<maven-resource group="com.thoughtworks.xstream" artifact="xstream"/>
		</module-def>

		<delete dir="${output.dir}/modules/org/infinispan"/>
		<delete dir="${output.dir}/modules/org/jboss/as/clustering/infinispan"/>
		<delete dir="${output.dir}/modules/org/jboss/as/clustering/jgroups"/>

		<module-def name="org.jboss.as.clustering.infinispan">
			<maven-resource group="org.jboss.as" artifact="jboss-as-clustering-infinispan"/>
		</module-def>

		<module-def name="org.jboss.as.clustering.jgroups">
			<maven-resource group="org.jboss.as" artifact="jboss-as-clustering-jgroups"/>
		</module-def>

		<module-def name="com.redhat.datagrid">
			<maven-resource group="com.redhat.datagrid" artifact="enterprise-datagrid-integration"/>
		</module-def>

		<module-def name="org.infinispan">
			<maven-resource group="org.infinispan" artifact="infinispan-core"/>
		</module-def>

		<module-def name="org.infinispan.server">
			<maven-resource group="org.infinispan" artifact="infinispan-server-core"/>
		</module-def>

		<module-def name="org.infinispan.server.hotrod">
			<maven-resource group="org.infinispan" artifact="infinispan-server-hotrod"/>
		</module-def>

		<module-def name="org.infinispan.server.memcached">
			<maven-resource group="org.infinispan" artifact="infinispan-server-memcached"/>
		</module-def>
		
		<module-def name="org.infinispan.server.rest">
			<maven-resource-with-classifier group="org.infinispan" artifact="infinispan-server-rest" classifier="classes" />
		</module-def>

		<module-def name="org.scala-lang.library">
			<maven-resource group="org.scala-lang" artifact="scala-library"/>
		</module-def>

		<module-def name="org.infinispan.loaders.jdbc">
			<maven-resource group="org.infinispan" artifact="infinispan-cachestore-jdbc"/>
		</module-def>

		<module-def name="c3p0.c3p0">
			<maven-resource group="c3p0" artifact="c3p0"/>
		</module-def>

		<module-def name="org.infinispan.loaders.remote">
			<maven-resource group="org.infinispan" artifact="infinispan-cachestore-remote"/>
		</module-def>

		<module-def name="org.infinispan.client.hotrod">
			<maven-resource group="org.infinispan" artifact="infinispan-client-hotrod"/>
		</module-def>

		<module-def name="org.apache.commons-pool">
			<maven-resource group="commons-pool" artifact="commons-pool"/>
		</module-def>

	</target>

	<target name="all" depends="clean, copy-files, modules"/>
</project>
